openapi: 3.1.0
info:
  title: DAHack AI API
  version: 0.1.0
paths:
  /v1/healthz:
    get:
      tags:
      - health
      summary: Health Check
      description: Health check endpoint.
      operationId: health_check_v1_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /v1/auth/register:
    post:
      tags:
      - auth
      summary: Register
      description: Register a new user.
      operationId: register_v1_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/auth/login:
    post:
      tags:
      - auth
      summary: Login
      description: Login user and return JWT token.
      operationId: login_v1_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/auth/me:
    get:
      tags:
      - auth
      summary: Get Current User
      description: Get current authenticated user.
      operationId: get_current_user_v1_auth_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      security:
      - HTTPBearer: []
  /v1/contacts/invite:
    post:
      tags:
      - contacts
      summary: Send Contact Invitation
      description: Send a contact invitation to another user.
      operationId: send_contact_invitation_v1_contacts_invite_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInvite'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /v1/contacts/{invitation_id}/accept:
    post:
      tags:
      - contacts
      summary: Accept Contact Invitation
      description: Accept a contact invitation.
      operationId: accept_contact_invitation_v1_contacts__invitation_id__accept_post
      security:
      - HTTPBearer: []
      parameters:
      - name: invitation_id
        in: path
        required: true
        schema:
          type: integer
          title: Invitation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/contacts/{invitation_id}/reject:
    post:
      tags:
      - contacts
      summary: Reject Contact Invitation
      description: Reject a contact invitation.
      operationId: reject_contact_invitation_v1_contacts__invitation_id__reject_post
      security:
      - HTTPBearer: []
      parameters:
      - name: invitation_id
        in: path
        required: true
        schema:
          type: integer
          title: Invitation Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/contacts:
    get:
      tags:
      - contacts
      summary: Get Contacts
      description: Get all contacts for the current user.
      operationId: get_contacts_v1_contacts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactListResponse'
      security:
      - HTTPBearer: []
  /v1/contacts/check/{username}:
    get:
      tags:
      - contacts
      summary: Check Mutual Contact
      description: Check if the current user and specified user are mutual contacts.
      operationId: check_mutual_contact_v1_contacts_check__username__get
      security:
      - HTTPBearer: []
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
          title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Check Mutual Contact V1 Contacts Check  Username  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/rooms:
    get:
      tags:
      - rooms
      summary: Get Rooms
      description: Get all rooms where the current user is a member.
      operationId: get_rooms_v1_rooms_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomListResponse'
      security:
      - HTTPBearer: []
    post:
      tags:
      - rooms
      summary: Create Room
      description: Create a new user-owned room.
      operationId: create_room_v1_rooms_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /v1/rooms/{room_id}:
    get:
      tags:
      - rooms
      summary: Get Room
      description: Get a specific room if you are a member.
      operationId: get_room_v1_rooms__room_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: integer
          title: Room Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - rooms
      summary: Delete Room
      description: Delete a room (owner only).
      operationId: delete_room_v1_rooms__room_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: integer
          title: Room Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/rooms/{room_id}/members:
    post:
      tags:
      - rooms
      summary: Add Members
      description: Add members to a user-owned room (owner only).
      operationId: add_members_v1_rooms__room_id__members_post
      security:
      - HTTPBearer: []
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: integer
          title: Room Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomAddMembers'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/rooms/{room_id}/leave:
    post:
      tags:
      - rooms
      summary: Leave Room
      description: Leave a user-owned room.
      operationId: leave_room_v1_rooms__room_id__leave_post
      security:
      - HTTPBearer: []
      parameters:
      - name: room_id
        in: path
        required: true
        schema:
          type: integer
          title: Room Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ContactInvite:
      properties:
        username:
          type: string
          title: Username
          description: Username of the user to invite
      type: object
      required:
      - username
      title: ContactInvite
    ContactListResponse:
      properties:
        sent_invitations:
          items:
            $ref: '#/components/schemas/InvitationResponse'
          type: array
          title: Sent Invitations
        received_invitations:
          items:
            $ref: '#/components/schemas/InvitationResponse'
          type: array
          title: Received Invitations
        contacts:
          items:
            $ref: '#/components/schemas/ContactResponse'
          type: array
          title: Contacts
      type: object
      required:
      - sent_invitations
      - received_invitations
      - contacts
      title: ContactListResponse
    ContactResponse:
      properties:
        id:
          type: integer
          title: Id
        other_user:
          $ref: '#/components/schemas/UserResponse'
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - other_user
      - created_at
      - updated_at
      title: ContactResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    InvitationResponse:
      properties:
        id:
          type: integer
          title: Id
        from_user:
          $ref: '#/components/schemas/UserResponse'
        to_user:
          $ref: '#/components/schemas/UserResponse'
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - from_user
      - to_user
      - created_at
      - updated_at
      title: InvitationResponse
    RoomAddMembers:
      properties:
        usernames:
          items:
            type: string
          type: array
          minItems: 1
          title: Usernames
          description: Usernames to add to room
      type: object
      required:
      - usernames
      title: RoomAddMembers
    RoomCreate:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
        member_usernames:
          items:
            type: string
          type: array
          title: Member Usernames
          description: Usernames to add to room
      type: object
      required:
      - name
      title: RoomCreate
    RoomListResponse:
      properties:
        rooms:
          items:
            $ref: '#/components/schemas/RoomResponse'
          type: array
          title: Rooms
      type: object
      required:
      - rooms
      title: RoomListResponse
    RoomMemberResponse:
      properties:
        user:
          $ref: '#/components/schemas/UserResponse'
        joined_at:
          type: string
          format: date-time
          title: Joined At
      type: object
      required:
      - user
      - joined_at
      title: RoomMemberResponse
    RoomResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        owner:
          anyOf:
          - $ref: '#/components/schemas/UserResponse'
          - type: 'null'
        is_system:
          type: boolean
          title: Is System
        members:
          items:
            $ref: '#/components/schemas/RoomMemberResponse'
          type: array
          title: Members
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - name
      - owner
      - is_system
      - members
      - created_at
      - updated_at
      title: RoomResponse
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
          default: bearer
      type: object
      required:
      - access_token
      title: Token
    UserLogin:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
      type: object
      required:
      - username
      - password
      title: UserLogin
    UserRegister:
      properties:
        username:
          type: string
          maxLength: 50
          minLength: 3
          title: Username
        password:
          type: string
          minLength: 8
          title: Password
      type: object
      required:
      - username
      - password
      title: UserRegister
    UserResponse:
      properties:
        id:
          type: integer
          title: Id
        username:
          type: string
          title: Username
        is_active:
          type: boolean
          title: Is Active
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - id
      - username
      - is_active
      - created_at
      - updated_at
      title: UserResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
