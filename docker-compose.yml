x-common-variables: &common-variables
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: app

services:
  db:
    image: postgres:15
    restart: always
    environment:
      <<: *common-variables
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    restart: always
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  migrate:
    build:
      context: ./api
      target: migration
    environment:
      POSTGRES_SERVER: db
      <<: *common-variables
      SECRET_KEY: your-secret-key-here
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET_NAME: app-bucket
      S3_REGION: us-east-1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./api:/app
      - /app/.venv
    restart: "no"

  api:
    build:
      context: ./api
      target: ${API_TARGET:-development}
    volumes:
      - ./api:/app
      - /app/.venv
    environment:
      POSTGRES_SERVER: db
      <<: *common-variables
      SECRET_KEY: your-secret-key-here
      ENVIRONMENT: ${ENVIRONMENT:-development}
      BACKEND_CORS_ORIGINS: '["http://localhost:3000"]'
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET_NAME: app-bucket
      S3_REGION: us-east-1
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/v1/healthz" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ui:
    build:
      context: ./ui
      target: ${UI_TARGET:-development}
    volumes:
      - ./ui:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  minio_data:
